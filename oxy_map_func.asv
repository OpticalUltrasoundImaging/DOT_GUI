function [hemo] = oxy_map_func (volume74,volume78,volume80,volume83,vx,vy,nvx,nvy,flip_state)

W_740_780_808_830=2.303*[1.3029 0.4383; 1.1050 0.7360; 0.8040 0.9164; 0.7804 1.0507];
W_square=W_740_780_808_830'*W_740_780_808_830;
KK=W_square\W_740_780_808_830';
K=sum(KK);

numOfSubplots = size(volume74, 3);
app.HemoglobindistributionPanel.AutoResizeChildren = 'off';
for p=1:numOfSubplots
    for i=1:nvx
        for j=1:nvy
            total_oxy(j,i,p)=K(1)*volume74(j,i,p)+K(2)*volume78(j,i,p)+K(3)*volume80(j,i,p)+K(4)*volume83(j,i,p);
            deoxy(j,i,p)=KK(1,1)*volume74(j,i,p)+KK(1,2)*volume78(j,i,p)+KK(1,3)*volume80(j,i,p)+KK(1,4)*volume83(j,i,p);
            oxy(j,i,p)=KK(2,1)*volume74(j,i,p)+KK(2,2)*volume78(j,i,p)+KK(2,3)*volume80(j,i,p)+KK(2,4)*volume83(j,i,p);
        end
    end
end

hemo=(total_oxy)*1000;
deoxy=deoxy*1000;
oxy=oxy*1000;

% h = findobj(allchild(0), 'flat', 'Tag','fgTotHemo');
% if ishandle(h)
%     close(h);
% end
% figure('Name','Total Hemoglobin','Tag','fgTotHemo');	% #5

for p=1:numOfSubplots
    ax1 = subplot(3,3,p,'Parent',app.HemoglobindistributionPanel);
    if flip_state==1 		%Flip matrices before plotting
        h = imagesc(vy,vx,fliplr(hemo(:,:,p)'),[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    else
        h = imagesc(vy,vx,hemo(:,:,p)',[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
	axis image;
    end
    colorbar('location','EastOutside');
    title(['Slice ' num2str(p)]);
    set(h,'HitTest','off');

    % h is the handle of image and its parent is the axis
    h_images(p) = h;
    h_axes(p) = get(h,'parent');

    % the source code of this is located in aborption_mapping.m
    set(h_axes(p),'ButtonDownFcn',{@btnAction,h_images(p),vx,vy});
end

max_oxy=max(max(max(hemo)));

h = findobj(allchild(0), 'flat', 'Tag','fgOxyHemo');
if ishandle(h)
    close(h);
end
figure('Name','Oxy Hemoglobin','Tag','fgOxyHemo');		% #6

for p=1:numOfSubplots
    subplot(3,3,p,'align')
    if flip_state==1 %Flip matrices before plotting
        h = imagesc(vy,vx,fliplr(oxy(:,:,p)'),[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    else
        h = imagesc(vy,vx,oxy(:,:,p)',[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    end
    colorbar('location','EastOutside');
    title(['Slice ' num2str(p)]);
    set(h,'HitTest','off');

    % h is the handle of image and its parent is the axis
    h_images(p) = h;
    h_axes(p) = get(h,'parent');

    % the source code of this is located in aborption_mapping.m
    set(h_axes(p),'ButtonDownFcn',{@btnAction,h_images(p),vx,vy});
end

h = findobj(allchild(0), 'flat', 'Tag','fgDeOxyHemo');
if ishandle(h)
    close(h);
end
figure('Name','Deoxy Hemoglobin','Tag','fgDeOxyHemo');	% #7

for p=1:numOfSubplots
    subplot(3,3,p,'align')
    if flip_state==1 %Flip matrices before plotting
        h = imagesc(vy,vx,fliplr(deoxy(:,:,p)'),[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    else
        h = imagesc(vy,vx,deoxy(:,:,p)',[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
	axis image;
    end
    colorbar('location','EastOutside');
    title(['Slice ' num2str(p)]);
    set(h,'HitTest','off');

    % h is the handle of image and its parent is the axis
    h_images(p) = h;
    h_axes(p) = get(h,'parent');

    % the source code of this is located in aborption_mapping.m
    set(h_axes(p),'ButtonDownFcn',{@btnAction,h_images(p),vx,vy});
end

h = findobj(allchild(0), 'flat', 'Tag','fgHemo6W');
if ishandle(h)
    close(h);
end
figure('Name','hemo6W','Tag','fgHemo6W');	% #8

for p=1:numOfSubplots
    subplot(3,3,p,'align')
    hemop=hemo(:,:,p);
    xx=hemop>=max_oxy*0.6;
    hemo6W=zeros(nvy,nvy);

    for m=1:nvy
        for n=1:nvy
            if xx(m,n)>0
                hemo6W(m,n)=hemop(m,n);
            else
                hemo6w(m,n)=0;
            end
        end
    end

    if flip_state==1  %Check to see if matrices should be plotted flipped
        h = imagesc(vy,vx,fliplr(hemo6W'),[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    else
        h = imagesc(vy,vx,hemo6W',[0 100]);
        set(gca,'YDir','Normal');
        colormap(jet);
        axis image;
    end
    colorbar('location','EastOutside');
    title(['Slice ' num2str(p)]);
    set(h,'HitTest','off');

    % h is the handle of image and its parent is the axis
    h_images(p) = h;
    h_axes(p) = get(h,'parent');

    % the source code of this is located in aborption_mapping.m
    set(h_axes(p),'ButtonDownFcn',{@btnAction,h_images(p),vx,vy});
end

function btnAction(src,eventdata,imhandle,vx,vy)
    h = findobj(gcf,'Tag','clearBtn');
    set(h,'Enable','on');

    imageActionFor = get(gcf,'userData');   % the figure which has 7 subplot images

    if imageActionFor.line == 1             % default.  The line measure button was clicked

        h = imline(gca);
        set(h,'Tag','MLine');
        api = iptgetapi(h);

        % Add a new position callback to set the text string
        api.addNewPositionCallback(@newPos_Callback_line);

        % Fire callback so we get initial text
        newPos_Callback_line(api.getPosition());
    else

        cdata = get(imhandle,'CData');
        minValue = min(min(cdata));
        mindata = ones(17) .* minValue;     % set mean value image background

        myData.imhandle = imhandle;         % figure's userData holds the data needed for the new pop up and its reset
        myData.vx = vx;
        myData.vy = vy;
        myData.minValue = minValue;

        fgHandle = figure('Name','Detail Map','Tag','fgDetailMap');
        subplot(2,1,1,'align');
        h = imagesc(vy,vx,cdata,[0 0.2]);
         colormap(jet);
        axis image;
        colorbar('location','EastOutside');
        title('Original Image');
        set(h,'HitTest','off');
        set(gca,'Tag','detailMapAxis','ButtonDownFcn',@btnActionForROI);

        subplot(2,1,2,'align');             % subplot for the mean values
        h = imagesc(vy,vx,mindata,[0 0.2]);
         colormap(jet);
        axis image;
        colorbar('location','EastOutside');
        title('Mean Value Image');
        set(h,'HitTest','off');

        myData.meanImageHandle = h;
        set(fgHandle,'userData',myData);

        uicontrol('Style', 'pushbutton', ...
            'String','Clear', ...
            'Position',[400 20 80 30], ...
            'Tag','clearROIBtn', ...
            'Callback','clear_popupimage');     % Pushbutton string callback that calls a MATLAB function

        fgColor = get(gcf,'color');

        uicontrol('Style','text','backgroundColor',fgColor,'FontSize',8, ...
            'Position',[490 16 120 30], ...
            'Tag','roiMaxValue');
        uicontrol('Style','text','backgroundColor',fgColor,'FontSize',8, ...
            'Position',[580 16 120 30], ...
            'Tag','roiMeanValue');
    end

